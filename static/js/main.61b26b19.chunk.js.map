{"version":3,"sources":["Navbar.jsx","Tabs.jsx","Sidebar.jsx","PropertyBox.jsx","TutorialBox.jsx","App.js","serviceWorker.js","index.js"],"names":["navProps","NavTitle","props","Brand","className","href","icon","integratedCircuit","width","IconLink","redirect","target","rel","source","color","NavOption","Dropdown","Toggle","variant","style","backgroundColor","border","id","name","Menu","options","map","item","index","Item","key","onClick","action","Navbar","window","confirm","sessionStorage","setItem","updateState","close","open","setTutorialShow","setTutorialPage","fileOptions","this","New","Close","editOptions","DeleteSelection","SelectAll","SelectNone","viewOptions","ZoomIn","ZoomOut","runOptions","RunSimulation","PauseSimulation","helpOptions","GithubRepository","Tutorial","About","bg","Col","md","lg","githubFilled","twitterCircleFilled","redditCircleFilled","React","Component","Tab","NavItem","activeState","content","obj","Button","showClose","onDelete","xIcon","AddTab","plusSquareOutlined","defaultProps","tabs","Tabs","includes","setState","circuitName","prompt","length","push","setActive","alert","splice","getItem","Nav","RemoveTab","AddNewTab","selectedOption","option","type","SidebarOption","Figure","Image","src","image","imageWidth","alt","Caption","maxWidth","wordWrap","SidebarOptions","menuChunks","chunk","CollapsableMenu","useState","isOpen","setOpen","_","menuItems","Math","ceil","aria-controls","aria-expanded","menuName","arrowsCollapse","arrowsExpand","Collapse","in","Sidebar","setSelection","optionName","optionType","refresh","state","interval","setInterval","clearInterval","circuitMenu","circuits","currentCircuit","i","PropertyBox","Modal","Dialog","Header","Title","aria-hidden","Body","InputGroup","Prepend","Text","FormControl","placeholder","aria-label","aria-describedby","tutorialPages","Carousel","class","currentPage","TutorialBox","forceUpdate","setValue","value","useForceUpdate","pages","pageToShow","localStorage","show","tutorialShow","onHide","setShow","dialogClassName","aria-labelledby","centered","closeButton","Footer","showFooter","App","showTutorial","page","selection","Container","fluid","Row","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.61b26b19.chunk.js","sourcesContent":["import React from \"react\";\nimport BNavbar from \"react-bootstrap/Navbar\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Col from \"react-bootstrap/Col\";\nimport { Icon } from \"@iconify/react\";\nimport integratedCircuit from \"@iconify/icons-wpf/integrated-circuit\";\nimport githubFilled from \"@iconify/icons-ant-design/github-filled\";\nimport twitterCircleFilled from \"@iconify/icons-ant-design/twitter-circle-filled\";\nimport redditCircleFilled from \"@iconify/icons-ant-design/reddit-circle-filled\";\n\nfunction NavTitle(props) {\n    return (\n        <BNavbar.Brand className=\"px-3\" href=\"#\">\n            <Icon className=\"mr-2\" icon={integratedCircuit} width=\"25\" />\n            <span className=\"Title\">Circuify</span>\n        </BNavbar.Brand>\n    );\n}\n\nfunction IconLink(props) {\n    return (\n        <a\n            className=\"mr-2\"\n            href={props.redirect}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n        >\n            <Icon icon={props.source} width=\"30\" color=\"white\" />\n        </a>\n    );\n}\n\nfunction NavOption(props) {\n    return (\n        <Dropdown className=\"mr-2\">\n            <Dropdown.Toggle\n                variant=\"secondary\"\n                style={{ backgroundColor: \"transparent\", border: 0 }}\n                id=\"dropdown-basic\"\n            >\n                {props.name}\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n                {props.options.map((item, index) => (\n                    <Dropdown.Item\n                        key={index}\n                        onClick={() => {\n                            item.action();\n                        }}\n                    >\n                        {item.name}\n                    </Dropdown.Item>\n                ))}\n                {/* <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n                <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n                <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item> */}\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n}\nlet navProps;\nexport default class Navbar extends React.Component {\n    constructor(props) {\n        super();\n        navProps = props;\n    }\n\n    New() {\n        if (window.confirm(\"Are you sure you want to start over?\")) {\n            sessionStorage.setItem(\"NavCommand\", \"New\");\n            navProps.updateState();\n        }\n    }\n\n    Close() {\n        window.close();\n    }\n\n    DeleteSelection() {\n        sessionStorage.setItem(\"NavCommand\", \"Delete Selection\");\n    }\n\n    SelectAll() {\n        sessionStorage.setItem(\"NavCommand\", \"Select All\");\n    }\n\n    SelectNone() {\n        sessionStorage.setItem(\"NavCommand\", \"Select None\");\n    }\n\n    ZoomIn() {\n        sessionStorage.setItem(\"NavCommand\", \"Zoom In\");\n    }\n\n    ZoomOut() {\n        sessionStorage.setItem(\"NavCommand\", \"Zoom Out\");\n    }\n\n    RunSimulation() {\n        sessionStorage.setItem(\"NavCommand\", \"Run Simulation\");\n    }\n\n    PauseSimulation() {\n        sessionStorage.setItem(\"NavCommand\", \"Pause Simulation\");\n    }\n\n    GithubRepository() {\n        window.open(\n            \"https://github.com/StefanJo3107/logic-circuit-playground\",\n            \"_blank\",\n            \"noopener,noreferrer\"\n        );\n    }\n\n    Tutorial() {\n        navProps.setTutorialShow(true);\n        navProps.setTutorialPage(-1);\n        navProps.updateState();\n    }\n\n    About() {\n        navProps.setTutorialShow(true);\n        navProps.setTutorialPage(0);\n        navProps.updateState();\n    }\n\n    render() {\n        const fileOptions = [\n            {\n                name: \"New\",\n                action: this.New,\n            },\n            {\n                name: \"Close\",\n                action: this.Close,\n            },\n        ];\n\n        const editOptions = [\n            {\n                name: \"Delete Selection\",\n                action: this.DeleteSelection,\n            },\n            {\n                name: \"Select All\",\n                action: this.SelectAll,\n            },\n            {\n                name: \"Select None\",\n                action: this.SelectNone,\n            },\n        ];\n\n        const viewOptions = [\n            {\n                name: \"Zoom In\",\n                action: this.ZoomIn,\n            },\n            {\n                name: \"Zoom Out\",\n                action: this.ZoomOut,\n            },\n        ];\n\n        const runOptions = [\n            {\n                name: \"Run Simulation\",\n                action: this.RunSimulation,\n            },\n            {\n                name: \"Pause Simulation\",\n                action: this.PauseSimulation,\n            },\n        ];\n\n        const helpOptions = [\n            {\n                name: \"Github Repository\",\n                action: this.GithubRepository,\n            },\n            {\n                name: \"Tutorial\",\n                action: this.Tutorial,\n            },\n            {\n                name: \"About\",\n                action: this.About,\n            },\n        ];\n        return (\n            <BNavbar\n                bg=\"dark\"\n                variant=\"dark\"\n                className=\"shadow flex-md-nowrap p-1\"\n            >\n                <Col md={3} lg={2}>\n                    <NavTitle />\n                </Col>\n                <NavOption\n                    updateState={() => this.New()}\n                    name=\"File\"\n                    options={fileOptions}\n                />\n                <NavOption name=\"Edit\" options={editOptions} />\n                <NavOption name=\"View\" options={viewOptions} />\n                <NavOption name=\"Run\" options={runOptions} />\n                <NavOption name=\"Help\" options={helpOptions} />\n                <div className=\"ml-auto\">\n                    <IconLink\n                        redirect=\"https://github.com/StefanJo3107\"\n                        source={githubFilled}\n                    />\n                    <IconLink\n                        redirect=\"https://twitter.com/SJovGD\"\n                        source={twitterCircleFilled}\n                    />\n                    <IconLink\n                        redirect=\"https://www.reddit.com/user/sjovanovic3107\"\n                        source={redditCircleFilled}\n                    />\n                </div>\n            </BNavbar>\n        );\n    }\n}\n","import React from \"react\";\nimport NavItem from \"react-bootstrap/NavItem\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Button from \"react-bootstrap/Button\";\nimport { Icon } from \"@iconify/react\";\nimport plusSquareOutlined from \"@iconify/icons-ant-design/plus-square-outlined\";\nimport xIcon from \"@iconify/icons-bi/x\";\n\nTab.defaultProps = {\n    showClose: true,\n};\n\nfunction Tab(props) {\n    return (\n        <NavItem>\n            <div\n                className={\n                    \"btn-dark tab-link nav-link \" +\n                    props.activeState +\n                    \" \" +\n                    (props.content === \"Main\" ? \"px-4 ml-2\" : \"\")\n                }\n                onClick={() => {\n                    props.onClick();\n                    obj.props.updateState();\n                }}\n            >\n                {props.content}\n                <Button\n                    className={\n                        \"p-0 remove-btn \" +\n                        props.activeState +\n                        \" \" +\n                        (!props.showClose ? \"d-none\" : \"\")\n                    }\n                    onClick={() => {\n                        props.onDelete();\n                        obj.props.updateState();\n                    }}\n                >\n                    <Icon icon={xIcon} />\n                </Button>\n            </div>\n        </NavItem>\n    );\n}\n\nfunction AddTab(props) {\n    return (\n        <NavItem>\n            <div\n                className={\"plus-btn btn-dark tab-link nav-link\"}\n                onClick={() => {\n                    props.onClick();\n                    obj.props.updateState();\n                }}\n            >\n                <Icon icon={plusSquareOutlined} width=\"25\" />\n            </div>\n        </NavItem>\n    );\n}\n\nexport let tabs = [\"Main\"];\nlet obj;\n\nexport default class Tabs extends React.Component {\n    constructor(props) {\n        super();\n        sessionStorage.setItem(\"currentCircuit\", \"Main\");\n        sessionStorage.setItem(\"circuits\", tabs);\n        obj = this;\n    }\n\n    setActive(name) {\n        if (tabs.includes(name)) {\n            sessionStorage.setItem(\"currentCircuit\", name);\n            this.setState({});\n        }\n    }\n\n    AddNewTab() {\n        let circuitName = prompt(\"Please enter the name of the circuit:\");\n        if (\n            circuitName != null &&\n            circuitName !== \"\" &&\n            !tabs.includes(circuitName) &&\n            circuitName.length <= 20\n        ) {\n            tabs.push(circuitName);\n            this.setState({});\n            this.setActive(tabs[tabs.length - 1]);\n            sessionStorage.setItem(\"circuits\", tabs);\n\n            this.props.updateState();\n        } else if (circuitName === \"\") {\n            alert(\"Circuit creation aborted because chosen name is invalid!\");\n        } else if (tabs.includes(circuitName)) {\n            alert(\n                \"Circuit creation aborted because chosen name already exists!\"\n            );\n        } else if (circuitName != null && circuitName.length > 20) {\n            alert(\n                \"Circuit creation aborted because name must be less than 21 characters long!\"\n            );\n        }\n    }\n\n    RemoveTab(index) {\n        let conf = window.confirm(\n            \"Are you sure you want to delete \" + tabs[index] + \"?\"\n        );\n\n        if (conf === true) {\n            tabs.splice(index, 1);\n            this.setState({});\n            if (tabs.length > index) {\n                this.setActive(tabs[index]);\n            } else {\n                this.setActive(tabs[tabs.length - 1]);\n            }\n\n            sessionStorage.setItem(\"circuits\", tabs);\n\n            this.props.updateState();\n        }\n    }\n\n    render() {\n        if (sessionStorage.getItem(\"NavCommand\") === \"New\") {\n            tabs = [\"Main\"];\n            sessionStorage.setItem(\"currentCircuit\", \"Main\");\n            sessionStorage.setItem(\"circuits\", tabs);\n        }\n        return (\n            <Nav className=\"nav-tabs\">\n                <Tab\n                    key={0}\n                    content={\"Main\"}\n                    onClick={() => this.setActive(\"Main\")}\n                    activeState={\n                        sessionStorage.getItem(\"currentCircuit\") === \"Main\"\n                            ? \"active\"\n                            : \"\"\n                    }\n                    showClose={false}\n                    onDelete={() => this.RemoveTab(0)}\n                />\n                {tabs.map((name, index) =>\n                    name !== \"Main\" ? (\n                        <Tab\n                            key={index}\n                            content={name}\n                            onClick={() => this.setActive(name)}\n                            activeState={\n                                sessionStorage.getItem(\"currentCircuit\") ===\n                                name\n                                    ? \"active\"\n                                    : \"\"\n                            }\n                            onDelete={() => this.RemoveTab(index)}\n                        />\n                    ) : (\n                        \"\"\n                    )\n                )}\n                <AddTab onClick={() => this.AddNewTab()} />\n            </Nav>\n        );\n    }\n}\n","import React, { useState } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport Figure from \"react-bootstrap/Figure\";\n\nimport _ from \"lodash\";\n\nimport { Icon } from \"@iconify/react\";\nimport arrowsExpand from \"@iconify/icons-bi/arrows-expand\";\nimport arrowsCollapse from \"@iconify/icons-bi/arrows-collapse\";\nimport { tabsComponent, tabs } from \"./Tabs.jsx\";\n\nexport let selectedOption = { option: \"SELECT\", type: \"TOOL\" };\n\nSidebarOption.defaultProps = {\n    imageWidth: 50,\n};\n\nfunction SidebarOption(props) {\n    return (\n        <Button\n            className={\n                props.name === sessionStorage.getItem(\"selectedOption\")\n                    ? \"btnOutline border-0\"\n                    : \"btnNoOutline border-0\"\n            }\n            variant=\"secondary\"\n            style={{ backgroundColor: \"transparent\" }}\n            onClick={props.onClick}\n        >\n            <Figure>\n                <Figure.Image\n                    src={props.image}\n                    width={props.imageWidth}\n                    alt={props.name}\n                />\n                <Figure.Caption\n                    className=\"text-center\"\n                    style={{ color: \"black\" }}\n                >\n                    <span\n                        className=\"d-inline-block text-center\"\n                        style={{ maxWidth: 100, wordWrap: \"break-word\" }}\n                    >\n                        {props.name}\n                    </span>\n                </Figure.Caption>\n            </Figure>\n        </Button>\n    );\n}\n\nfunction SidebarOptions(props) {\n    return props.menuChunks.map((chunk, index) => (\n        <div key={index} className=\"d-flex justify-content-around\">\n            {chunk.map((item, index) => (\n                <SidebarOption\n                    key={index}\n                    name={item.name}\n                    image={item.image}\n                    imageWidth={props.imageWidth}\n                    onClick={() => {\n                        props.onClick(item.name);\n                    }}\n                />\n            ))}\n        </div>\n    ));\n}\n\nfunction CollapsableMenu(props) {\n    const [open, setOpen] = useState(props.isOpen);\n\n    const menuChunks = _.chunk(props.menuItems, Math.ceil(2));\n\n    return (\n        <>\n            <Button\n                onClick={() => setOpen(!open)}\n                aria-controls=\"collapse-content\"\n                aria-expanded={open}\n                variant={open ? \"dark\" : \"secondary\"}\n                className=\"rounded-0 shadow\"\n            >\n                <div className=\"d-flex justify-content-between\">\n                    <p className=\"m-0 p-0\">{props.menuName}</p>\n                    <Icon\n                        icon={open ? arrowsCollapse : arrowsExpand}\n                        width=\"20\"\n                    />\n                </div>\n            </Button>\n            <Collapse in={open}>\n                <div id=\"collapse-content\" className=\"mt-2 mb-2 px-2\">\n                    <SidebarOptions\n                        menuChunks={menuChunks}\n                        imageWidth={props.imageWidth}\n                        onClick={(name) => {\n                            props.onClick(name);\n                        }}\n                    />\n                </div>\n            </Collapse>\n        </>\n    );\n}\n\nexport default class Sidebar extends React.Component {\n    constructor(props) {\n        super();\n        this.state = { refresh: false };\n    }\n\n    setSelection = (optionName, optionType) => {\n        selectedOption = { option: optionName, type: optionType };\n        sessionStorage.setItem(\"selectedOption\", optionName);\n        sessionStorage.setItem(\"selectedType\", optionType);\n        this.setState({\n            refresh: !this.state.refresh,\n        });\n    };\n\n    componentDidMount() {\n        this.interval = setInterval(() => {\n            if (\n                selectedOption.option !==\n                sessionStorage.getItem(\"selectedOption\")\n            ) {\n                selectedOption = {\n                    option: sessionStorage.getItem(\"selectedOption\"),\n                    type: sessionStorage.getItem(\"selectedType\"),\n                };\n                this.setState({ refresh: !this.state.refresh });\n            }\n        }, 100);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n        const tools = [\n            {\n                image: \"./Images/Cursor.png\",\n                name: \"SELECT\",\n            },\n            {\n                image: \"./Images/DeleteWire.png\",\n                name: \"REMOVE WIRE\",\n            },\n        ];\n\n        const inputs = [\n            {\n                image: \"./Images/True.png\",\n                name: \"TRUE\",\n            },\n            {\n                image: \"./Images/False.png\",\n                name: \"FALSE\",\n            },\n            {\n                image: \"./Images/Clock.png\",\n                name: \"CLOCK\",\n            },\n            {\n                image: \"./Images/Button.png\",\n                name: \"BUTTON\",\n            },\n            {\n                image: \"./Images/Switch.png\",\n                name: \"SWITCH\",\n            },\n        ];\n\n        const gates = [\n            {\n                image:\n                    \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/79/Buffer_ANSI.svg/150px-Buffer_ANSI.svg.png\",\n                name: \"BUFFER\",\n            },\n            {\n                image:\n                    \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/NOT_ANSI.svg/150px-NOT_ANSI.svg.png\",\n                name: \"NOT\",\n            },\n            {\n                image:\n                    \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/64/AND_ANSI.svg/150px-AND_ANSI.svg.png\",\n                name: \"AND\",\n            },\n            {\n                image:\n                    \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f2/NAND_ANSI.svg/150px-NAND_ANSI.svg.png\",\n                name: \"NAND\",\n            },\n            {\n                image:\n                    \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b5/OR_ANSI.svg/150px-OR_ANSI.svg.png\",\n                name: \"OR\",\n            },\n            {\n                image:\n                    \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6c/NOR_ANSI.svg/150px-NOR_ANSI.svg.png\",\n                name: \"NOR\",\n            },\n            {\n                image:\n                    \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/01/XOR_ANSI.svg/150px-XOR_ANSI.svg.png\",\n                name: \"XOR\",\n            },\n            {\n                image:\n                    \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d6/XNOR_ANSI.svg/150px-XNOR_ANSI.svg.png\",\n                name: \"XNOR\",\n            },\n        ];\n\n        const outputs = [\n            {\n                image: \"./Images/Lightbulb.png\",\n                name: \"LIGHT BULB\",\n            },\n            {\n                image: \"./Images/Hexdigit02.png\",\n                name: \"HEX DIGIT\",\n            },\n            {\n                image: \"./Images/SevenSegment.png\",\n                name: \"SEVEN SEGMENT\",\n            },\n            {\n                image: \"./Images/Oscilloscope.png\",\n                name: \"O-SCOPE\",\n            },\n        ];\n\n        const flipflops = [\n            {\n                image: \"./Images/SRFlip-Flop.png\",\n                name: \"SR FLIP-FLOP\",\n            },\n            {\n                image: \"./Images/DFlip-Flop.png\",\n                name: \"D FLIP-FLOP\",\n            },\n            {\n                image: \"./Images/JKFlip-Flop.png\",\n                name: \"JK FLIP-FLOP\",\n            },\n            {\n                image: \"./Images/TFlip-Flop.png\",\n                name: \"T FLIP-FLOP\",\n            },\n        ];\n\n        const plexers = [\n            {\n                image: \"./Images/Multiplexer.png\",\n                name: \"MUX\",\n            },\n            {\n                image: \"./Images/Demultiplexer.png\",\n                name: \"DEMUX\",\n            },\n        ];\n\n        const circuits = [];\n        let currentCircuit = sessionStorage.getItem(\"currentCircuit\");\n        for (let i = 1; i < tabs.length; i++) {\n            if (tabs[i] !== currentCircuit) {\n                circuits.push({\n                    image: \"./Images/IntegratedCircuit.png\",\n                    name: tabs[i],\n                });\n            }\n        }\n\n        let circuitMenu;\n        if (circuits.length > 0) {\n            circuitMenu = (\n                <CollapsableMenu\n                    isOpen={true}\n                    menuName=\"Integrated Circuits\"\n                    menuItems={circuits}\n                    onClick={(name) => {\n                        this.setSelection(name, \"CIRCUIT\");\n                    }}\n                    imageWidth={70}\n                />\n            );\n        } else {\n            circuitMenu = <></>;\n        }\n\n        return (\n            <>\n                <Col\n                    md={3}\n                    lg={2}\n                    className=\"d-md-block bg-light sidebar collapse\"\n                >\n                    <div className=\"sidebar-sticky pt-0\">\n                        <ul className=\"nav flex-column\">\n                            <CollapsableMenu\n                                isOpen={true}\n                                menuName=\"Tools\"\n                                type=\"TOOL\"\n                                menuItems={tools}\n                                onClick={(name) =>\n                                    this.setSelection(name, \"TOOL\")\n                                }\n                                imageWidth={45}\n                            />\n                            <CollapsableMenu\n                                isOpen={true}\n                                menuName=\"Inputs\"\n                                menuItems={inputs}\n                                onClick={(name) =>\n                                    this.setSelection(name, \"INPUT\")\n                                }\n                                imageWidth={55}\n                            />\n                            <CollapsableMenu\n                                isOpen={true}\n                                menuName=\"Logic Gates\"\n                                menuItems={gates}\n                                onClick={(name) =>\n                                    this.setSelection(name, \"GATE\")\n                                }\n                                imageWidth={55}\n                            />\n                            <CollapsableMenu\n                                isOpen={true}\n                                menuName=\"Outputs\"\n                                menuItems={outputs}\n                                onClick={(name) =>\n                                    this.setSelection(name, \"OUTPUT\")\n                                }\n                                imageWidth={55}\n                            />\n                            <CollapsableMenu\n                                isOpen={true}\n                                menuName=\"Flip-Flops\"\n                                menuItems={flipflops}\n                                onClick={(name) => {\n                                    this.setSelection(name, \"FLIP-FLOP\");\n                                }}\n                                imageWidth={70}\n                            />\n\n                            <CollapsableMenu\n                                isOpen={true}\n                                menuName=\"Plexers\"\n                                menuItems={plexers}\n                                onClick={(name) => {\n                                    this.setSelection(name, \"PLEXER\");\n                                }}\n                                imageWidth={70}\n                            />\n                            {circuitMenu}\n                        </ul>\n                    </div>\n                </Col>\n            </>\n        );\n    }\n}\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nexport default class PropertyBox extends React.Component {\n    render() {\n        return (\n            <Modal.Dialog className=\"modalBox\">\n                <Modal.Header>\n                    <Modal.Title>Name</Modal.Title>\n                    <button type=\"button\" className=\"close\">\n                        <span aria-hidden=\"true\">×</span>\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </Modal.Header>\n\n                <Modal.Body className=\"modalBody\">\n                    <InputGroup className=\"mb-3\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"basic-addon1\">\n                                Name:\n                            </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl\n                            placeholder=\"Element Name\"\n                            aria-label=\"Element Name\"\n                            aria-describedby=\"basic-addon1\"\n                        />\n                    </InputGroup>\n                </Modal.Body>\n            </Modal.Dialog>\n        );\n    }\n}\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport { useState } from \"react\";\n\nlet tutorialPages = [\n    {\n        name: \"About\",\n        content: (\n            <div className=\"tutorial-content\">\n                <p>\n                    <strong>Circuify - Logic Circuit Visualizer</strong> is\n                    free, open-source tool for building and visualizing logic\n                    circuits.\n                </p>\n                <p>\n                    <strong>Most notable features:</strong>\n                </p>\n                <ul className=\"tutorial-list\">\n                    <li>\n                        Design logic circuits with{\" \"}\n                        <strong>\n                            intuitive and easy to use user interface\n                        </strong>\n                    </li>\n                    <li>\n                        Great range of different{\" \"}\n                        <strong>logic gates, inputs, outputs...</strong>\n                    </li>\n                    <li>\n                        Support for{\" \"}\n                        <strong>making custom integrated circuits</strong> for\n                        easier project organization and endless creation\n                        possibilities\n                    </li>\n                    <li>And many more to explore</li>\n                </ul>\n                <Image className=\"img-fluid\" src=\"./Images/TitleBanner.png\" />\n            </div>\n        ),\n    },\n    {\n        name: \"UI Introduction\",\n        content: (\n            <div className=\"tutorial-content\">\n                <p>User Interface can be separated into three parts:</p>\n                <ul className=\"tutorial-list\">\n                    <li>\n                        <strong>Sidebar - </strong>\n                        containts all the elements and the tools\n                    </li>\n                    <li>\n                        <strong>Navbar - </strong>\n                        containts all the options you would expect to find like\n                        starting new project, canvas manipulation, element\n                        selection...\n                    </li>\n                    <li>\n                        <strong>Canvas - </strong>\n                        main part of the application where elements are placed\n                        and manipulated\n                    </li>\n                </ul>\n                {/* <Image className=\"img-fluid\" src=\"./Images/TitleBanner.png\" /> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/SidebarTutorial.jpg\"\n                            alt=\"First slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3>Sidebar</h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/NavTutorial.jpg\"\n                            alt=\"Second slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3>Navbar</h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/CanvasTutorial.jpg\"\n                            alt=\"Third slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3 className=\"text-info\">Canvas</h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n            </div>\n        ),\n    },\n    {\n        name: \"Element Manipulation\",\n        content: (\n            <div className=\"tutorial-content\">\n                <p>\n                    <strong>Placing an element</strong> is done by selecting the\n                    element on the sidebar and then clicking on the desired\n                    location on the canvas.\n                </p>\n                <p>\n                    <strong>Selecting an element</strong> can be done in\n                    multiple ways:\n                </p>\n                <ul className=\"tutorial-list\">\n                    <li>\n                        Selecting the single element by simply clicking on it\n                    </li>\n                    <li>\n                        Selecting single or group of elements by creating the\n                        rectangular selection\n                    </li>\n                    <li>\n                        Selecting all elements by choosing select all option\n                        under <strong>Edit {\">\"} Select All</strong>\n                    </li>\n                </ul>\n                <p>\n                    <strong>Dragging an element</strong> is done by selecting it\n                    and then dragging the mouse to the desired location on the\n                    canvas.\n                </p>\n                <p>\n                    <strong>Deleting an element</strong> can be done in two\n                    ways:\n                </p>\n                <ul className=\"tutorial-list\">\n                    <li>\n                        Selecting elements and then hitting{\" \"}\n                        <strong>DELETE key</strong> on the keyboard\n                    </li>\n                    <li>\n                        Selecting elements and choosing delete option under{\" \"}\n                        <strong>Edit {\">\"} Delete Selection</strong>\n                    </li>\n                </ul>\n\n                <Carousel interval={null}>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/PlacingElementTutorial.gif\"\n                            alt=\"First slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3 className=\"text-info\">Placing an element</h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/SelectingGroupTutorial.gif\"\n                            alt=\"Second slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3 className=\"text-info\">\n                                Selecting group of elements\n                            </h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/DraggingElementTutorial.gif\"\n                            alt=\"Third slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3 className=\"text-info\">Dragging an element</h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/DeletingElementsTutorial.gif\"\n                            alt=\"Fourth slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3 className=\"text-info\">Deleting elements</h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n            </div>\n        ),\n    },\n    {\n        name: \"Element Wiring\",\n        content: (\n            <div className=\"tutorial-content\">\n                <p>\n                    Crucial part of every logic curcuit are{\" \"}\n                    <strong>wires</strong>, connecting inputs and outputs of\n                    elements.\n                </p>\n                <p>\n                    <strong>Adding wire</strong> is done by firstly selecting\n                    input(output) of the first element you wish to connect.\n                    After that, valid output(input) joint needs to be\n                    selected(indicated by the blue color) in order to add the\n                    wire.\n                </p>\n                <p>\n                    <strong>Removing wire</strong> is done by selecting Remove\n                    Wire tool on the sidebar and then selecting input and output\n                    joints of the wire you wish to remove.\n                </p>\n\n                <Carousel interval={null}>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/ConnectingElementsTutorial.gif\"\n                            alt=\"First slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3 className=\"text-info\">Connecting elements</h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/RemovingWireTutorial.gif\"\n                            alt=\"Second slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3 className=\"text-info\">Removing wire</h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n            </div>\n        ),\n    },\n    {\n        name: \"Integrated Circuits\",\n        content: (\n            <div className=\"tutorial-content\">\n                <p>\n                    One of the most important features of Circuify is the\n                    support for <strong>Integrated Circuits.</strong> Once you\n                    create IC, you can use it repeatedly, which allows for\n                    better organized and more structured design.\n                </p>\n                <p>\n                    <strong>Creating circuit</strong> is done by clicking on the\n                    + button located on the tab bar on top of the canvas. Once\n                    you press it, you will be prompted to choose a name for your\n                    circuit.\n                </p>\n                <p>\n                    <strong>\n                        Inputs and outputs of the integrated circuit:\n                    </strong>\n                </p>\n                <ul className=\"tutorial-list\">\n                    <li>\n                        Inputs will be assignable on the integrated circuit only\n                        for the inputs of type <strong>Switch</strong>. Other\n                        inputs will only be manageable in the circuit itself.\n                    </li>\n                    <li>\n                        Outputs will be assignable on the integrated circuit\n                        only for the outputs of type <strong>Light Bulb</strong>\n                        . Other outputs will only be manageable in the circuit\n                        itself.\n                    </li>\n                </ul>\n                <p>\n                    It is highly recommended to name every Switch and Light Bulb\n                    in the circuit, as those names will be visible on the\n                    Integrated Circuit element.\n                </p>\n                <p>\n                    <strong>Adding Integrated Circuit element</strong> - Once\n                    the circuit is created, it can be used across all the other\n                    circuits in form of an integrated circuit. Just locate the\n                    element at the bottom of the Sidebar and add it to a canvas.\n                </p>\n\n                <Carousel interval={null}>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/CreatingCircuitTutorial.gif\"\n                            alt=\"First slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3 className=\"text-info\">Creating circuit</h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/NamingSwitchTutorial.gif\"\n                            alt=\"Second slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3 className=\"text-info\">Naming a switch</h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/AddingCircuitTutorial.gif\"\n                            alt=\"Third slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3 className=\"text-info\">\n                                Adding integrated circuit\n                            </h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n            </div>\n        ),\n    },\n    {\n        name: \"Finishing Up\",\n        content: (\n            <div className=\"tutorial-content\">\n                <p>\n                    That is about everything you need to know in order to use\n                    Circuify. All that is left now is to let your imagination\n                    run wild and create awesome things. Hopefully you'll enjoy\n                    using it as much as I enjoyed making it.\n                </p>\n                <p>\n                    If you get stuck at any point, you can always re-read this\n                    tutorial by going under <strong>Help {\">\"} Tutorial</strong>\n                    .\n                </p>\n                {/* <img\n                    className=\"img-fluid\"\n                    src=\"./Images/CircuifySevenSegment.gif\"\n                ></img> */}\n                <img\n                    class=\"d-block w-100\"\n                    src=\"./Images/CircuifySevenSegment.gif\"\n                ></img>\n            </div>\n        ),\n    },\n];\n\nlet currentPage = 0;\n\nfunction useForceUpdate() {\n    const [value, setValue] = useState(0);\n    return () => setValue((value) => ++value);\n}\n\nfunction showFooter(props, forceUpdate) {\n    if (props.pages.pageToShow === -1) {\n        return (\n            <Modal.Footer>\n                <span className=\"page-number\">\n                    <strong>\n                        ({currentPage + 1}/{tutorialPages.length})\n                    </strong>\n                </span>\n                <Button\n                    onClick={() => {\n                        if (currentPage > 0) {\n                            currentPage--;\n                            forceUpdate();\n                        }\n                    }}\n                    variant=\"info\"\n                    className={currentPage <= 0 ? \"disabled\" : \"\"}\n                >\n                    Previous\n                </Button>\n                <Button\n                    onClick={() => {\n                        if (currentPage + 1 < tutorialPages.length) {\n                            currentPage++;\n                            forceUpdate();\n                        } else {\n                            props.setShow(false);\n                            forceUpdate();\n                        }\n                    }}\n                    variant=\"info\"\n                >\n                    {currentPage + 1 >= tutorialPages.length\n                        ? \"Finish\"\n                        : \"Next\"}\n                </Button>\n            </Modal.Footer>\n        );\n    } else return;\n}\n\nexport default function TutorialBox(props) {\n    const forceUpdate = useForceUpdate();\n    if (props.pages.pageToShow !== -1) {\n        currentPage = props.pages.pageToShow;\n    }\n\n    localStorage.setItem(\"tutorialShown\", true);\n\n    return (\n        <>\n            <Modal\n                show={props.tutorialShow.show}\n                onHide={() => {\n                    currentPage = 0;\n                    props.setShow(false);\n                    forceUpdate();\n                }}\n                dialogClassName=\"modal-60w\"\n                aria-labelledby=\"tutorial-modal-label\"\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>{tutorialPages[currentPage].name}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{tutorialPages[currentPage].content}</Modal.Body>\n                {showFooter(props, forceUpdate)}\n            </Modal>\n        </>\n    );\n}\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\n\nimport \"./App.css\";\nimport Navbar from \"./Navbar.jsx\";\nimport Sidebar from \"./Sidebar.jsx\";\nimport Tabs from \"./Tabs.jsx\";\nimport PropertyBox from \"./PropertyBox.jsx\";\nimport TutorialBox from \"./TutorialBox.jsx\";\n\nlet tutorialShow = { show: true };\nlet tutorialPages = { pageToShow: -1 };\nclass App extends React.Component {\n    constructor(props) {\n        super();\n        if (localStorage.getItem(\"tutorialShown\") === \"true\") {\n            this.showTutorial(false);\n        }\n    }\n\n    showTutorial(state) {\n        tutorialShow.show = state;\n    }\n\n    setTutorialPage(page) {\n        tutorialPages.pageToShow = page;\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar\n                    updateState={() => {\n                        this.setState({});\n                    }}\n                    setTutorialShow={this.showTutorial}\n                    setTutorialPage={this.setTutorialPage}\n                ></Navbar>\n                <Sidebar selection={sessionStorage.getItem(\"selectedOption\")} />\n\n                <Container fluid>\n                    <Row>\n                        <div\n                            className=\"col-md-9 ml-sm-auto px-0 col-lg-10\"\n                            id=\"canvasHolder\"\n                        >\n                            <Tabs\n                                updateState={() => {\n                                    this.setState({});\n                                }}\n                            ></Tabs>\n                        </div>\n                    </Row>\n                    <PropertyBox />\n                </Container>\n\n                <TutorialBox\n                    tutorialShow={tutorialShow}\n                    setShow={this.showTutorial}\n                    pages={tutorialPages}\n                />\n            </>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}